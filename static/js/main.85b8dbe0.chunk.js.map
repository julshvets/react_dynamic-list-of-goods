{"version":3,"sources":["components/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","_ref","goods","_jsx","children","map","good","className","concat","color","name","id","getAll","fetch","then","response","_response$headers$get","ok","Error","status","statusText","headers","get","includes","json","App","_useState","useState","_useState2","_slicedToArray","visibleGoods","setVisibleGoods","onClickAllButton","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","goodsFromServer","wrap","_context","prev","next","sent","stop","onClickLoad5Button","_callee2","_context2","_toConsumableArray","sort","good1","good2","localeCompare","slice","catch","onClickLoadRedGoods","_callee3","_context3","filter","_jsxs","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"yRAQaA,EAA6BC,IAAMC,MAAK,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OAC3DC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,UAAS,eAAAC,OAAiBF,EAAKG,OAAQL,SAEtCE,EAAKI,MAJDJ,EAAKK,Y,OCPX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAa,IAADC,EAChB,IAAKD,EAASE,GACZ,MAAM,IAAIC,MAAM,GAADV,OAAIO,EAASI,OAAM,OAAAX,OAAMO,EAASK,aAGnD,GAAyC,QAArCJ,EAACD,EAASM,QAAQC,IAAI,uBAAe,IAAAN,IAApCA,EAAsCO,SAAS,oBAClD,MAAM,IAAIL,MAAM,iCAGlB,OAAOH,EAASS,UAIf,ICdMC,EAAgB,WAC3B,IAAAC,EAAwCC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAArDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,EAAmBC,sBAAWC,YAAAC,IAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACL9B,IAAS,KAAD,EAAhC0B,EAAeE,EAAAG,KAErBZ,EAAgBO,GAAiB,wBAAAE,EAAAI,UAAAP,OAChC,IAEGQ,EAAqBZ,sBAAWC,YAAAC,IAAAC,MAAC,SAAAU,IAAA,IAAAR,EAAA,OAAAH,IAAAI,MAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAL,KAAA,EDMhC9B,IACJE,MAAK,SAAAZ,GAAK,OAAI8C,YAAI9C,GAChB+C,MAAK,SAACC,EAAOC,GAAK,OAAKD,EAAMxC,KAAK0C,cAAcD,EAAMzC,SACtD2C,MAAM,EAAG,MACXC,OAAM,WACL,MAAM,IAAIpC,MAAM,sBCVwB,KAAD,EAAnCoB,EAAeS,EAAAJ,KAErBZ,EAAgBO,GAAiB,wBAAAS,EAAAH,UAAAE,OAChC,IAEGS,EAAsBtB,sBAAWC,YAAAC,IAAAC,MAAC,SAAAoB,IAAA,IAAAlB,EAAA,OAAAH,IAAAI,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EDUjC9B,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EAAMwD,QAAO,SAAApD,GAAI,MAAmB,QAAfA,EAAKG,YACxC6C,OAAM,WACL,MAAM,IAAIpC,MAAM,sBCZ0B,KAAD,EAArCoB,EAAemB,EAAAd,KAErBZ,EAAgBO,GAAiB,wBAAAmB,EAAAb,UAAAY,OAChC,IAEH,OACEG,eAAA,OAAKpD,UAAU,MAAKH,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEyD,KAAK,SACL,UAAQ,aACRC,QAAS7B,EAAiB5B,SAC3B,mBAIDD,cAAA,UACEyD,KAAK,SACL,UAAQ,oBACRC,QAAShB,EAAmBzC,SAC7B,uBAIDD,cAAA,UACEyD,KAAK,SACL,UAAQ,aACRC,QAASN,EAAoBnD,SAC9B,mBAIDD,cAACL,EAAS,CAACI,MAAO4B,QCpDxBgC,IAASC,OACP5D,cAACsB,EAAG,IACJuC,SAASC,eAAe,W","file":"static/js/main.85b8dbe0.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../types/Good';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={`good-color--${good.color}`}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      if (!response.headers.get('content-type')?.includes('application/json')) {\n        throw new Error('Content type is not supported');\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods]\n      .sort((good1, good2) => good1.name.localeCompare(good2.name))\n      .slice(0, 5))\n    .catch(() => {\n      throw new Error('No goods loaded');\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'))\n    .catch(() => {\n      throw new Error('No goods loaded');\n    });\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n\n  const onClickAllButton = useCallback(async () => {\n    const goodsFromServer = await getAll();\n\n    setVisibleGoods(goodsFromServer);\n  }, []);\n\n  const onClickLoad5Button = useCallback(async () => {\n    const goodsFromServer = await get5First();\n\n    setVisibleGoods(goodsFromServer);\n  }, []);\n\n  const onClickLoadRedGoods = useCallback(async () => {\n    const goodsFromServer = await getRedGoods();\n\n    setVisibleGoods(goodsFromServer);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={onClickAllButton}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={onClickLoad5Button}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={onClickLoadRedGoods}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}