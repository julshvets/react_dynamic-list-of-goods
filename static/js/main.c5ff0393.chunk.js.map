{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","_ref","goods","_jsx","children","map","good","style","color","name","id","getAll","fetch","then","response","_response$headers$get","ok","Error","concat","status","statusText","headers","get","includes","json","App","_useState","useState","_useState2","_slicedToArray","visibleGoods","setVisibleGoods","onClickAllButton","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","goodsFromServer","wrap","_context","prev","next","catch","sent","stop","onClickLoad5Button","_callee2","_context2","_toConsumableArray","sort","good1","good2","localeCompare","slice","onClickLoadRedGoods","_callee3","_context3","filter","_jsxs","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA6BC,IAAMC,MAAK,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OAC3DC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,MAAO,CAAEC,MAAOF,EAAKE,OAAQJ,SAE5BE,EAAKG,MAJDH,EAAKI,Y,OCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAa,IAADC,EAChB,IAAKD,EAASE,GACZ,MAAM,IAAIC,MAAM,GAADC,OAAIJ,EAASK,OAAM,OAAAD,OAAMJ,EAASM,aAGnD,GAAyC,QAArCL,EAACD,EAASO,QAAQC,IAAI,uBAAe,IAAAP,IAApCA,EAAsCQ,SAAS,oBAClD,MAAM,IAAIN,MAAM,iCAGlB,OAAOH,EAASU,UAIf,ICdMC,EAAgB,WAC3B,IAAAC,EAAwCC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAArDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,EAAmBC,sBAAWC,YAAAC,IAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACL/B,IAC3BE,MAAK,SAAAX,GAAK,OAAIA,KACdyC,OAAM,WACL,MAAM,IAAI1B,MAAM,sBACf,KAAD,EAJEqB,EAAeE,EAAAI,KAMrBb,EAAgBO,GAAiB,wBAAAE,EAAAK,UAAAR,OAChC,IAEGS,EAAqBb,sBAAWC,YAAAC,IAAAC,MAAC,SAAAW,IAAA,IAAAT,EAAA,OAAAH,IAAAI,MAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cAAAM,EAAAN,KAAA,EDEhC/B,IACJE,MAAK,SAAAX,GAAK,OAAI+C,YAAI/C,GAChBgD,MAAK,SAACC,EAAOC,GAAK,OAAKD,EAAM1C,KAAK4C,cAAcD,EAAM3C,SACtD6C,MAAM,EAAG,MACXX,OAAM,WACL,MAAM,IAAI1B,MAAM,sBCNwB,KAAD,EAAnCqB,EAAeU,EAAAJ,KAErBb,EAAgBO,GAAiB,wBAAAU,EAAAH,UAAAE,OAChC,IAEGQ,EAAsBtB,sBAAWC,YAAAC,IAAAC,MAAC,SAAAoB,IAAA,IAAAlB,EAAA,OAAAH,IAAAI,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EDMjC/B,IACJE,MAAK,SAAAX,GAAK,OAAIA,EAAMwD,QAAO,SAAApD,GAAI,MAAmB,QAAfA,EAAKE,YACxCmC,OAAM,WACL,MAAM,IAAI1B,MAAM,sBCR0B,KAAD,EAArCqB,EAAemB,EAAAb,KAErBb,EAAgBO,GAAiB,wBAAAmB,EAAAZ,UAAAW,OAChC,IAEH,OACEG,eAAA,OAAKC,UAAU,MAAKxD,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACE0D,KAAK,SACL,UAAQ,aACRC,QAAS9B,EAAiB5B,SAC3B,mBAIDD,cAAA,UACE0D,KAAK,SACL,UAAQ,oBACRC,QAAShB,EAAmB1C,SAC7B,uBAIDD,cAAA,UACE0D,KAAK,SACL,UAAQ,aACRC,QAASP,EAAoBnD,SAC9B,mBAIDD,cAACL,EAAS,CAACI,MAAO4B,QCxDxBiC,IAASC,OACP7D,cAACsB,EAAG,IACJwC,SAASC,eAAe,W","file":"static/js/main.c5ff0393.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      if (!response.headers.get('content-type')?.includes('application/json')) {\n        throw new Error('Content type is not supported');\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods]\n      .sort((good1, good2) => good1.name.localeCompare(good2.name))\n      .slice(0, 5))\n    .catch(() => {\n      throw new Error('No goods loaded');\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'))\n    .catch(() => {\n      throw new Error('No goods loaded');\n    });\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n\n  const onClickAllButton = useCallback(async () => {\n    const goodsFromServer = await getAll()\n      .then(goods => goods)\n      .catch(() => {\n        throw new Error('No goods loaded');\n      });\n\n    setVisibleGoods(goodsFromServer);\n  }, []);\n\n  const onClickLoad5Button = useCallback(async () => {\n    const goodsFromServer = await get5First();\n\n    setVisibleGoods(goodsFromServer);\n  }, []);\n\n  const onClickLoadRedGoods = useCallback(async () => {\n    const goodsFromServer = await getRedGoods();\n\n    setVisibleGoods(goodsFromServer);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={onClickAllButton}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={onClickLoad5Button}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={onClickLoadRedGoods}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}